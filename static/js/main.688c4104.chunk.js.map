{"version":3,"sources":["Components/CardTile/CardTile.jsx","Pages/WorksPage/WorksPage.jsx","Pages/HomePage/HomePage.jsx","Pages/ConfirmationPage/ConfirmationPage.jsx","Pages/ContactPage/ContactPage.jsx","Components/NavBar/NavBar.jsx","Components/ParticlesBackground/particles-config-custom1.js","Components/ParticlesBackground/ParticlesBackground.js","App.js","reportWebVitals.js","index.js","projects.js"],"names":["CardTile","props","useState","show","setShow","handleClose","className","Card","style","display","width","margin","Img","variant","src","photo","height","Body","Title","name","Text","description","Button","onClick","window","open","link","Modal","onHide","backdrop","keyboard","scrollable","animation","centered","Header","closeButton","technology","howto","authors","map","author","i","Footer","github","projects","require","WorksPage","project","process","HomePage","to","network","ConfirmationPage","emailAgain","ContactPage","setName","email","setEmail","subject","setSubject","message","setMessage","showForm","setShowForm","showConfirm","setShowConfirm","Form","onSubmit","e","preventDefault","emailjs","sendForm","target","then","result","console","log","text","error","Group","controlId","Label","Control","type","placeholder","value","onChange","evt","required","as","rows","NavBar","Navbar","expand","backgroundColor","fixed","Container","Toggle","Collapse","id","Nav","Link","NavDropdown","title","Item","href","particlesConfig","autoPlay","particles","number","color","h","count","enable","offset","speed","decay","sync","s","l","shape","size","random","minimumValue","min","max","zIndex","opacityRate","sizeRate","velocityRate","move","direction","opacity","interactivity","events","onhover","mode","onclick","modes","repulse","distance","duration","ParticlesBackground","particlesInit","useCallback","engine","loadFull","particlesLoaded","container","init","loaded","position","top","left","params","App","path","element","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.688c4104.chunk.js","sourcesContent":["import Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport React, { useState } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\n\nfunction CardTile(props) {\n  //modal setup, show state, and handling close or show\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <div className=\"CardTile\">\n      <Card\n        className=\"shadow p-3 mb-5 bg-white rounded\"\n        style={{ display: \"in-line block\", width: \"320px\", margin: \"20px\" }}\n      >\n        <Card.Img variant=\"top\" src={props.photo} style={{ height: \"180px\" }} />\n        <Card.Body style={{ height: \"140px\" }}>\n          <Card.Title>{props.name}</Card.Title>\n          <Card.Text>{props.description}</Card.Text>\n        </Card.Body>\n        <Card.Body>\n          <Button\n            style={{ margin: \"0 10px 0 10px\" }}\n            variant=\"primary\"\n            onClick={() => {\n              window.open(props.link);\n            }}\n          >\n            Visit Site!\n          </Button>\n\n          <Button\n            style={{ margin: \"0 10px 0 10px\" }}\n            variant=\"primary\"\n            onClick={handleShow}\n          >\n            Details\n          </Button>\n        </Card.Body>\n      </Card>\n\n      <Modal\n        show={show}\n        onHide={handleClose}\n        backdrop=\"static\"\n        keyboard={false}\n        scrollable={true}\n        animation={true}\n        centered={true}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>{props.name}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"modal-body-div\">\n            <h3>Technology Stack</h3>\n            <p>{props.technology}</p>\n\n            <h3>How To Use</h3>\n            <p>{props.howto}</p>\n\n            <h3>Authors/Contributors (Github)</h3>\n            <ul>\n              {props.authors.map((author, i) => (\n                <li key={i}>{author}</li>\n              ))}\n            </ul>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            style={{ margin: \"0 10px 0 10px\" }}\n            variant=\"primary\"\n            onClick={() => {\n              window.open(props.github);\n            }}\n          >\n            See GitHub Repository\n          </Button>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n}\n\nexport default CardTile;\n","import React, { Component } from \"react\";\nimport CardTile from \"../../Components/CardTile/CardTile\";\nconst projects = require(\"../../projects.js\");\n\nfunction WorksPage(props) {\n  return (\n    <div className=\"HomePage\">\n      <div className=\"works-container\">\n        <h1>Projects</h1>\n\n        <div className=\"cards-container\">\n          {projects.map((project) => (\n            <CardTile\n              name={project.name}\n              description={project.description}\n              photo={process.env.PUBLIC_URL + project.photo}\n              link={project.link}\n              technology={project.technology}\n              howto={project.howto}\n              authors={project.authors}\n              github={project.github}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default WorksPage;\n","import React, { Component } from \"react\";\n\nimport { SocialIcon } from \"react-social-icons\";\nimport Button from \"react-bootstrap/Button\";\nimport { Link } from \"react-router-dom\";\n\nfunction HomePage(props) {\n  return (\n    <div className=\"HomePage\">\n      <div className=\"profile-container\">\n        <div className=\"portrait\">\n          <img src={process.env.PUBLIC_URL + \"/images/photo.jpg\"} />\n        </div>\n        <div className=\"info\">\n          <div className=\"title\">\n            <h2>Paul Yeung</h2>\n            <h3>Full Stack Developer</h3>\n          </div>\n          <p>\n            Problem Solving, Efficiency, and Innovation! These are my 3 core\n            pillars to building top quality software of the future. I love\n            finding creative ways to solve unique problems alongside a mindset\n            of furthering long-term visions and objectives. Together we can find\n            ways to expand and scale your business, while seeking out untapped\n            opportunities.\n          </p>\n          <Link to=\"/works\">\n            <Button style={{ margin: \"0 10px 0 10px\" }} variant=\"primary\">\n              See Projects!\n            </Button>\n          </Link>\n          <div className=\"social-icons-div\">\n            <SocialIcon\n              className=\"social-icon-btn\"\n              network=\"linkedin\"\n              onClick={() =>\n                window.open(\"https://www.linkedin.com/in/paul-yeung-13088738/\")\n              }\n            />\n            <SocialIcon\n              className=\"social-icon-btn\"\n              network=\"github\"\n              onClick={() => window.open(\"https://github.com/paulryeung\")}\n            />\n            <Link to=\"/contact\">\n              <SocialIcon className=\"social-icon-btn\" network=\"email\" />\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport { Link } from \"react-router-dom\";\n\nfunction ConfirmationPage(props) {\n  return (\n    <div className=\"ConfirmationPage\">\n      <h2>Thank you for reaching out!</h2>\n      <br />\n      <p>\n        I understand you are busy, however I will make every attempt to get back\n        to you within the next 2 or 3 days. Until then, feel free to continue\n        exploring the portfolio. Thank you again.\n      </p>\n      <br />\n      <Link to=\"/home\">\n        <Button style={{ margin: \"0 10px 0 10px\" }} variant=\"primary\">\n          Go To Home\n        </Button>\n      </Link>\n      <Link to=\"/works\">\n        <Button style={{ margin: \"0 10px 0 10px\" }} variant=\"primary\">\n          See Projects\n        </Button>\n      </Link>\n      <Button\n        style={{ margin: \"0 10px 0 10px\" }}\n        variant=\"primary\"\n        onClick={props.emailAgain}\n      >\n        Email Again\n      </Button>\n    </div>\n  );\n}\n\nexport default ConfirmationPage;\n","import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport emailjs from \"emailjs-com\";\nimport ConfirmationPage from \"../ConfirmationPage/ConfirmationPage\";\n\nfunction ContactPage(props) {\n  //set state for form variables\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [subject, setSubject] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  //set state for which page to display\n  const [showForm, setShowForm] = useState(true);\n  const [showConfirm, setShowConfirm] = useState(false);\n\n  //sending email form\n  function sendEmail(e) {\n    e.preventDefault();\n\n    emailjs\n      .sendForm(\n        \"service_eg9ujgh\",\n        \"portfolio_contact\",\n        e.target,\n        \"ZcY8_EOTB_mBNzLue\"\n      )\n      .then(\n        (result) => {\n          console.log(result.text);\n        },\n        (error) => {\n          console.log(error.text);\n        }\n      );\n\n    //e.target.reset();\n    //show confirmation page instead, and switch off form\n    setShowForm(false);\n    setShowConfirm(true);\n  }\n\n  function emailAgain() {\n    //reset all the form states\n    setName(\"\");\n    setEmail(\"\");\n    setSubject(\"\");\n    setMessage(\"\");\n\n    //reset form to be on and confirmation page off\n    setShowForm(true);\n    setShowConfirm(false);\n  }\n\n  return (\n    <div className=\"ContactPage\">\n      {showForm && (\n        <div className=\"form-div\">\n          <h1>Contact Me!</h1>\n          <br />\n          <Form onSubmit={sendEmail}>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Name\"\n                name=\"name\"\n                value={name}\n                onChange={(evt) => setName(evt.target.value)}\n                required\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Email\"\n                name=\"email\"\n                value={email}\n                onChange={(evt) => setEmail(evt.target.value)}\n                required\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>Subject</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Subject\"\n                name=\"subject\"\n                value={subject}\n                onChange={(evt) => setSubject(evt.target.value)}\n                required\n              />\n            </Form.Group>\n\n            <Form.Group\n              className=\"mb-3\"\n              controlId=\"exampleForm.ControlTextarea1\"\n            >\n              <Form.Label>Message</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                rows={4}\n                placeholder=\"Hi Paul!\"\n                name=\"message\"\n                value={message}\n                onChange={(evt) => setMessage(evt.target.value)}\n                required\n              />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n          </Form>\n        </div>\n      )}\n\n      {showConfirm && <ConfirmationPage emailAgain={emailAgain} />}\n    </div>\n  );\n}\n\nexport default ContactPage;\n","import React from \"react\";\n\nimport { useNavigate, Link } from \"react-router-dom\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Container from \"react-bootstrap/Container\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\nimport { SocialIcon } from \"react-social-icons\";\nconst projects = require(\"../../projects\");\n\nfunction NavBar() {\n  return (\n    <Navbar expand=\"lg\" style={{ backgroundColor: \"#e3f2fd\" }} fixed=\"top\">\n      <Container>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"m-auto \">\n            <Nav.Link as={Link} to=\"/home\">\n              Home\n            </Nav.Link>\n            <Nav.Link as={Link} to=\"/works\">\n              Projects\n            </Nav.Link>\n            <Nav.Link as={Link} to=\"/contact\">\n              Contact\n            </Nav.Link>\n\n            <NavDropdown title=\"GitHub Repos\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item href={projects[0].github} target=\"_blank\">\n                {projects[0].name}\n              </NavDropdown.Item>\n              <NavDropdown.Item href={projects[1].github} target=\"_blank\">\n                {projects[1].name}\n              </NavDropdown.Item>\n              <NavDropdown.Item href={projects[2].github} target=\"_blank\">\n                {projects[2].name}\n              </NavDropdown.Item>\n              <NavDropdown.Item href={projects[3].github} target=\"_blank\">\n                {projects[3].name}\n              </NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default NavBar;\n","const particlesConfig = {\n  autoPlay: true,\n  particles: {\n    number: {\n      value: 45,\n    },\n    color: {\n      value: \"#42B01A\",\n      animation: {\n        h: {\n          count: 0,\n          enable: true,\n          offset: 0,\n          speed: 200,\n          decay: 0,\n          sync: false,\n        },\n        s: {\n          count: 0,\n          enable: false,\n          offset: 0,\n          speed: 1,\n          decay: 0,\n          sync: true,\n        },\n        l: {\n          count: 0,\n          enable: false,\n          offset: 0,\n          speed: 1,\n          decay: 0,\n          sync: true,\n        },\n      },\n    },\n    shape: {\n      type: \"circle\",\n    },\n\n    size: {\n      random: {\n        enable: true,\n        minimumValue: 1,\n      },\n      value: {\n        min: 8,\n        max: 50,\n      },\n    },\n    zIndex: {\n      random: {\n        enable: true,\n        minimumValue: 0,\n      },\n      value: 0,\n      opacityRate: 1,\n      sizeRate: 1,\n      velocityRate: 1,\n    },\n\n    move: {\n      enable: true,\n      speed: 2,\n      direction: \"top\",\n    },\n    opacity: {\n      random: {\n        enable: true,\n        minimumValue: 0.3,\n      },\n      value: {\n        min: 0.2,\n        max: 0.6,\n      },\n    },\n  },\n  interactivity: {\n    events: {\n      onhover: {\n        enable: true,\n        mode: \"repulse\",\n      },\n      onclick: {\n        enable: true,\n        mode: \"push\",\n      },\n    },\n    modes: {\n      repulse: {\n        distance: 50,\n        duration: 0.5,\n      },\n    },\n  },\n};\n\nexport default particlesConfig;\n","import React, { useCallback } from \"react\";\nimport Particles from \"react-tsparticles\";\n//import particlesConfig from \"./particles-config\";\nimport particlesConfig from \"./particles-config-custom1\";\n\n//ts particles stuff\nimport { loadFull } from \"tsparticles\";\n\nfunction ParticlesBackground(props) {\n  //from https://stackoverflow.com/questions/71903252/particle-js-not-showing-particles-on-reactjs-website\n\n  const particlesInit = useCallback(async (engine) => {\n    //console.log(engine);\n    // you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\n    // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n    // starting from v2 you can add only the features you need reducing the bundle size\n    await loadFull(engine);\n  }, []);\n\n  const particlesLoaded = useCallback(async (container) => {\n    //console.log(container);\n  }, []);\n\n  return (\n    <div className=\"ParticlesBackground\">\n      <Particles\n        id=\"tsparticles\"\n        init={particlesInit}\n        loaded={particlesLoaded}\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          position: \"absolute\",\n          top: \"0\",\n          left: \"0\",\n        }}\n        params={particlesConfig}\n      ></Particles>\n      ;\n    </div>\n  );\n}\n\nexport default ParticlesBackground;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Route, Routes } from \"react-router-dom\";\nimport WorksPage from \"./Pages/WorksPage/WorksPage\";\nimport HomePage from \"./Pages/HomePage/HomePage\";\nimport ContactPage from \"./Pages/ContactPage/ContactPage\";\nimport NavBar from \"./Components/NavBar/NavBar\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n//particles background\nimport ParticlesBackground from \"./Components/ParticlesBackground/ParticlesBackground\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <ParticlesBackground />\n        <NavBar />\n        <div className=\"app-container\">\n          <Routes>\n            <Route path=\"/works\" element={<WorksPage />} />\n            <Route path=\"/home\" element={<HomePage />} />\n            <Route path=\"/contact\" element={<ContactPage />} />\n            <Route path=\"*\" element={<HomePage />} />\n          </Routes>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","let projects = [\n  {\n    name: \"Kirby & The Tasty Minefields\",\n    description:\n      \"Help Kirby clear bombs so he can resume feasting! Extra cute Kirby themed Minesweeper game\",\n    photo: \"/images/kirby_square.jpg\",\n    link: \"https://paulryeung.github.io/Kirby-Minesweeper/\",\n    github: \"https://github.com/paulryeung/Kirby-Minesweeper\",\n    technology: \"Vanilla Javascript, HTML, and CSS\",\n    howto:\n      \"Kirby Minesweeper! Win by revealing all safe squares, and planting minesweepers/Kirby on squares containing bombs. Left-click a square to reveal it. Numbers indicate how many of the 8 surrounding squares have a bomb. Revealing a bomb ends the game in defeat. Right clicking a square plants a minesweeper/Kirby. Number of bombs in current game and number of minesweepers/kirbys used is shown on the right. Game comes in Easy, Normal, and Hard settings as per button choices; changing board size and number of bombs.\",\n    authors: [\"Paul Yeung (paulryeung)\"],\n  },\n  {\n    name: \"Pullup\",\n    description:\n      \"Pullup onto a residential driveway you rented! Reserve parking spots from home owner listings! Introducing the AirBnB of parking!\",\n    photo: \"/images/pullup.png\",\n    link: \"https://pullup-app.herokuapp.com/\",\n    github: \"https://github.com/paulryeung/Pull-up\",\n    technology:\n      \"MERN stack (Mongo DB Atlas, Express.js, React, Node.js), Google Maps API, Google Autocomplete API, SASS styling, Heroku\",\n    howto:\n      \"Sign up and login to begin! Search the address or name of destination where you want to go. Interactive map will display any parking hostings near you. Click on the one you want, go to detail page, choose your dates and make your parking reservation! Also register your own homes as hostings, by searching your address and picking a daily rate to charge ($/day). Your home won't show up on your own search maps but appear in maps to other users! At the moment most users have registered homes in Toronto or Vancouver, but feel free to make multiple accounts and add listings everywhere in the world!\",\n    authors: [\n      \"Paul Yeung (paulryeung)\",\n      \"Elvin Hatamov (elvinhatamov)\",\n      \"Lud Lin (ludlin886)\",\n      \"Shadab Karim (karims7)\",\n    ],\n  },\n  {\n    name: \"Avengers Initiative\",\n    description:\n      \"Tour the Avengers compound for top secret profiles and missions of your favorite heroes!\",\n    photo: \"/images/avengers.jpg\",\n    link: \"https://avengers-initiative.herokuapp.com/\",\n    github: \"https://github.com/paulryeung/avengers-initiative\",\n    technology: \"Mongo DB Atlas, Express.js, Node.js, Heroku\",\n    howto:\n      \"Enter the site and browse! Click to see profiles of each Avenger, or existing missions from Avengers HQ. Feel free to recruit/add or delete an Avenger, filling out a form. Picture information is based on urls to online images. Also add or delete missions and click on icons to assign which avengers will participate. Clicking Reset DB Seeds will reset database to some default number of avenger profiles and missions.\",\n    authors: [\"Paul Yeung (paulryeung)\"],\n  },\n  {\n    name: \"Garden-Smart\",\n    description:\n      \"Add and show off your garden of vegetables! Waste money on different inputs!\",\n    photo: \"/images/vegetables.jpg\",\n    link: \"https://garden-smart-app.herokuapp.com/\",\n    github: \"https://github.com/paulryeung/Garden-Smart\",\n    technology: \"Python, Django, PostgreSQL, AWS S3 Buckets, Heroku\",\n    howto:\n      \"Sign up and login to begin; or feel free to use Username: Paul and Password: password for demo! Go to the Garden and choose some seeds you wish to plant, and add some fertilizers, tools or pesticides you wish to use. They will be added to Your Basket. After that, go to Add A Vegetable and choose from the seeds in your basket to plant. Assign Date, and number of seeds which will affect your spending. Afterwards you can visit your garden, see your plant profile, add photo and consume inputs for a price. \",\n    authors: [\n      \"Paul Yeung (paulryeung)\",\n      \"Yaroslav Snigur (YaroslavSnigur)\",\n      \"Joon Suh (Jason) Sohn (bbcello)\",\n    ],\n  },\n];\n\nmodule.exports = projects;\n"],"sourceRoot":""}